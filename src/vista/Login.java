/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Color;
import java.awt.Font;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.text.StyledEditorKit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import static javax.swing.text.StyleConstants.Italic;
/**
 *
 * @author Propietario
 */
public class Login extends javax.swing.JFrame implements KeyListener{

    /**
     * Creates new form Login
     */
modelo.ClsIngreso ing =new modelo.ClsIngreso();
public static FrmCotizacion cot = new FrmCotizacion();


    public Login() {
        
        initComponents();
        setBounds(500, 150, 420, 450);
        //Agregar tiulo en barra de navegacion.
        this.setTitle("Ingreso al sistema");
        administrador.setTitle("Administrador");
        //agregar logo a la barra de navegacion de cada formulario y Jdialog
       setIconImage(new ImageIcon(getClass().getResource("logo2acces.fw.png")).getImage()) ;
       administrador.setIconImage(new ImageIcon(getClass().getResource("logo2acces.fw.png")).getImage()) ;
        txtPassLogin.addKeyListener(this);
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        administrador = new javax.swing.JDialog();
        PnlAdm = new javax.swing.JPanel();
        txtEmaAdm = new javax.swing.JTextField();
        txtUsuAdmi = new javax.swing.JTextField();
        txtPassAdm = new javax.swing.JTextField();
        txtNomAdm = new javax.swing.JTextField();
        lbEmaAdm = new javax.swing.JLabel();
        lbUsuAdm = new javax.swing.JLabel();
        lbPasAdm = new javax.swing.JLabel();
        lbNomAdm = new javax.swing.JLabel();
        lbIdAdm = new javax.swing.JLabel();
        txtIdAdmi = new javax.swing.JTextField();
        btnSaveAdm = new javax.swing.JButton();
        btnUpdateAdm = new javax.swing.JButton();
        btnDeleteAdm = new javax.swing.JButton();
        btnSearchAdm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbNuevoAdm = new javax.swing.JLabel();
        btnIngresarLogin = new javax.swing.JButton();
        LbCerrar = new javax.swing.JLabel();
        lbTituloLogin = new javax.swing.JLabel();
        lbPassLogin = new javax.swing.JLabel();
        txtUsuLogin = new org.edisoncor.gui.textField.TextField();
        txtPassLogin = new org.edisoncor.gui.passwordField.PasswordField();
        lbLogo = new javax.swing.JLabel();
        lbFonLogin = new javax.swing.JLabel();

        administrador.setBackground(new java.awt.Color(253, 247, 247));
        administrador.setResizable(false);
        administrador.getContentPane().setLayout(null);

        PnlAdm.setBackground(new java.awt.Color(165, 177, 204));
        PnlAdm.setLayout(null);
        PnlAdm.add(txtEmaAdm);
        txtEmaAdm.setBounds(110, 180, 260, 30);
        PnlAdm.add(txtUsuAdmi);
        txtUsuAdmi.setBounds(110, 60, 260, 30);
        PnlAdm.add(txtPassAdm);
        txtPassAdm.setBounds(110, 100, 260, 30);
        PnlAdm.add(txtNomAdm);
        txtNomAdm.setBounds(110, 140, 260, 30);

        lbEmaAdm.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbEmaAdm.setText("Email");
        PnlAdm.add(lbEmaAdm);
        lbEmaAdm.setBounds(20, 180, 80, 20);

        lbUsuAdm.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbUsuAdm.setText("Usuario");
        PnlAdm.add(lbUsuAdm);
        lbUsuAdm.setBounds(20, 70, 50, 20);

        lbPasAdm.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbPasAdm.setText("Contrase√±a");
        PnlAdm.add(lbPasAdm);
        lbPasAdm.setBounds(20, 110, 80, 20);

        lbNomAdm.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbNomAdm.setText("Nombre");
        PnlAdm.add(lbNomAdm);
        lbNomAdm.setBounds(20, 150, 80, 20);

        lbIdAdm.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbIdAdm.setText("id");
        PnlAdm.add(lbIdAdm);
        lbIdAdm.setBounds(50, 30, 30, 20);
        PnlAdm.add(txtIdAdmi);
        txtIdAdmi.setBounds(110, 20, 260, 30);

        administrador.getContentPane().add(PnlAdm);
        PnlAdm.setBounds(30, 50, 410, 240);

        btnSaveAdm.setBackground(new java.awt.Color(146, 165, 194));
        btnSaveAdm.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btnSaveAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png"))); // NOI18N
        btnSaveAdm.setText("Guardar");
        btnSaveAdm.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSaveAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAdmActionPerformed(evt);
            }
        });
        administrador.getContentPane().add(btnSaveAdm);
        btnSaveAdm.setBounds(450, 50, 140, 40);

        btnUpdateAdm.setBackground(new java.awt.Color(146, 165, 194));
        btnUpdateAdm.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btnUpdateAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/actualizar.png"))); // NOI18N
        btnUpdateAdm.setText("Actualizar");
        btnUpdateAdm.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnUpdateAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAdmActionPerformed(evt);
            }
        });
        administrador.getContentPane().add(btnUpdateAdm);
        btnUpdateAdm.setBounds(450, 110, 140, 40);

        btnDeleteAdm.setBackground(new java.awt.Color(146, 165, 194));
        btnDeleteAdm.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btnDeleteAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnDeleteAdm.setText("Eliminar");
        btnDeleteAdm.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnDeleteAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAdmActionPerformed(evt);
            }
        });
        administrador.getContentPane().add(btnDeleteAdm);
        btnDeleteAdm.setBounds(450, 180, 140, 40);

        btnSearchAdm.setBackground(new java.awt.Color(146, 165, 194));
        btnSearchAdm.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btnSearchAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        btnSearchAdm.setText("Buscar");
        btnSearchAdm.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSearchAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAdmActionPerformed(evt);
            }
        });
        administrador.getContentPane().add(btnSearchAdm);
        btnSearchAdm.setBounds(450, 250, 140, 40);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("Datos del administrador");
        administrador.getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 10, 240, 40);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 255));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(420, 427));
        setResizable(false);
        getContentPane().setLayout(null);

        lbNuevoAdm.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbNuevoAdm.setForeground(new java.awt.Color(255, 255, 255));
        lbNuevoAdm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbNuevoAdm.setText("Nuevo Admistrador");
        lbNuevoAdm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbNuevoAdmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbNuevoAdmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbNuevoAdmMouseExited(evt);
            }
        });
        getContentPane().add(lbNuevoAdm);
        lbNuevoAdm.setBounds(140, 410, 120, 20);

        btnIngresarLogin.setBackground(new java.awt.Color(0, 51, 255));
        btnIngresarLogin.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnIngresarLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnIngresarLogin.setText("Ingresar");
        btnIngresarLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnIngresarLogin);
        btnIngresarLogin.setBounds(140, 360, 130, 29);

        LbCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btnclose2.png"))); // NOI18N
        LbCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LbCerrarMouseClicked(evt);
            }
        });
        getContentPane().add(LbCerrar);
        LbCerrar.setBounds(360, 10, 40, 30);

        lbTituloLogin.setBackground(new java.awt.Color(255, 255, 255));
        lbTituloLogin.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lbTituloLogin.setForeground(new java.awt.Color(255, 255, 255));
        lbTituloLogin.setText("Usuario");
        getContentPane().add(lbTituloLogin);
        lbTituloLogin.setBounds(80, 190, 190, 20);

        lbPassLogin.setBackground(new java.awt.Color(255, 255, 255));
        lbPassLogin.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lbPassLogin.setForeground(new java.awt.Color(255, 255, 255));
        lbPassLogin.setText("Contrase√±a");
        getContentPane().add(lbPassLogin);
        lbPassLogin.setBounds(80, 270, 190, 20);

        txtUsuLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(txtUsuLogin);
        txtUsuLogin.setBounds(80, 230, 270, 30);

        txtPassLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(txtPassLogin);
        txtPassLogin.setBounds(80, 300, 270, 30);

        lbLogo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo2.fw.png"))); // NOI18N
        lbLogo.setText("                          ");
        lbLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbLogo);
        lbLogo.setBounds(130, 20, 180, 180);

        lbFonLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fontLogin.png"))); // NOI18N
        lbFonLogin.setText("             ");
        getContentPane().add(lbFonLogin);
        lbFonLogin.setBounds(0, 0, 420, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LbCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LbCerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_LbCerrarMouseClicked

    private void btnIngresarLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarLoginActionPerformed
        JIngresarLogin();
    }//GEN-LAST:event_btnIngresarLoginActionPerformed

    private void lbNuevoAdmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbNuevoAdmMouseClicked
       administrador.setBounds(0, 0, 717, 342);
       administrador.setVisible(true);
    
    }//GEN-LAST:event_lbNuevoAdmMouseClicked

    private void lbNuevoAdmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbNuevoAdmMouseEntered
        // TODO add your handling code here:
        lbNuevoAdm.setForeground(new Color (51,153,255));
        lbNuevoAdm.setFont(new Font("Tahoma",Font.ITALIC,14));
        
    }//GEN-LAST:event_lbNuevoAdmMouseEntered

    private void lbNuevoAdmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbNuevoAdmMouseExited
        // TODO add your handling code here:
        lbNuevoAdm.setForeground(new Color (255,255,255));
        lbNuevoAdm.setFont(new Font("Tahoma",Font.ITALIC,12));
    }//GEN-LAST:event_lbNuevoAdmMouseExited

    private void btnSaveAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAdmActionPerformed
       JGuardarAdmi();
       cot.JLimpiarFormulario(PnlAdm);
    }//GEN-LAST:event_btnSaveAdmActionPerformed

    private void btnUpdateAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAdmActionPerformed
           JActuaAdmi();
            cot.JLimpiarFormulario(PnlAdm);
    }//GEN-LAST:event_btnUpdateAdmActionPerformed

    private void btnDeleteAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAdmActionPerformed
        JEliminarAdmi();
        cot.JLimpiarFormulario(PnlAdm);
    }//GEN-LAST:event_btnDeleteAdmActionPerformed

    private void btnSearchAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAdmActionPerformed
        JBuscarAdmi();

    }//GEN-LAST:event_btnSearchAdmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbCerrar;
    private javax.swing.JPanel PnlAdm;
    private javax.swing.JDialog administrador;
    private javax.swing.JButton btnDeleteAdm;
    private javax.swing.JButton btnIngresarLogin;
    private javax.swing.JButton btnSaveAdm;
    private javax.swing.JButton btnSearchAdm;
    private javax.swing.JButton btnUpdateAdm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbEmaAdm;
    private javax.swing.JLabel lbFonLogin;
    private javax.swing.JLabel lbIdAdm;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbNomAdm;
    private javax.swing.JLabel lbNuevoAdm;
    private javax.swing.JLabel lbPasAdm;
    private javax.swing.JLabel lbPassLogin;
    private javax.swing.JLabel lbTituloLogin;
    private javax.swing.JLabel lbUsuAdm;
    private javax.swing.JTextField txtEmaAdm;
    private javax.swing.JTextField txtIdAdmi;
    private javax.swing.JTextField txtNomAdm;
    private javax.swing.JTextField txtPassAdm;
    private org.edisoncor.gui.passwordField.PasswordField txtPassLogin;
    private javax.swing.JTextField txtUsuAdmi;
    private org.edisoncor.gui.textField.TextField txtUsuLogin;
    // End of variables declaration//GEN-END:variables

    


//Metodo para Validar e ingresar al sistema
private void JIngresarLogin(){

if(txtUsuLogin.getText().length()==0){
JOptionPane.showMessageDialog(null,"Por favor ingrese su usuario","Login", WIDTH);
txtUsuLogin.grabFocus();
}
else if(txtPassLogin.getText().length()==0){
JOptionPane.showMessageDialog(null,"Por favor digite la contrase√±a del usuario","Login", WIDTH);
txtPassLogin.grabFocus();
}
else{
  
                ing.MtdbuscarUsuPass(txtPassLogin.getText(),txtUsuLogin.getText());
               try {
                   if (ing.datos.next()){
                        dispose();
                       cot.setVisible(true);
                 
                      
                   }
             
                else{
                    JOptionPane.showMessageDialog(null,"datos de acceso incorrectos","Validacion de datos", JOptionPane.WARNING_MESSAGE); 
                }}
             catch (Exception ex) {
                 System.out.println("Error al cargar usuario"+ex.getLocalizedMessage());
                JOptionPane.showMessageDialog(null,"Error al cargar usuario","ACCESO"+ex.getLocalizedMessage(),JOptionPane.ERROR_MESSAGE);
            }



}

}

//Metodo para guardar administrador
public void JGuardarAdmi(){
   
 if(txtIdAdmi.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese la identificacion del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
    else if(txtUsuAdmi.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el nombre de usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
else if(txtNomAdm.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el nombre de usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
else if(txtPassAdm.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese la contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
else if(txtEmaAdm.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el email del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
else {
   ing.MtdValidarUsu(txtIdAdmi.getText(),txtUsuAdmi.getText(),txtEmaAdm.getText());
     try {
          if(ing.datos.next()){
          if(txtIdAdmi.getText().equals(ing.datos.getString(1))){
          JOptionPane.showMessageDialog(null, "Ya existe esa identificacion","Administrador",JOptionPane.WARNING_MESSAGE);
          txtIdAdmi.grabFocus();
          }
          else if(txtUsuAdmi.getText().equals(ing.datos.getString(2))){
          JOptionPane.showMessageDialog(null, "Ya existe ese usuario","Administrador",JOptionPane.WARNING_MESSAGE);
          txtUsuAdmi.grabFocus();
          }
          else if(txtEmaAdm.getText().equals(ing.datos.getString(3))){
           JOptionPane.showMessageDialog(null, "Ya existe ese email","Administrador",JOptionPane.WARNING_MESSAGE);
          txtEmaAdm.grabFocus();
          }
          }
          else{
           ing.MtdGuardarAdmi(txtIdAdmi.getText(),txtUsuAdmi.getText(), txtPassAdm.getText(), txtNomAdm.getText(), txtEmaAdm.getText(),cot.JObtenerfecha());
          JOptionPane.showMessageDialog(null, "Datos guardados con exito","Administrador",JOptionPane.INFORMATION_MESSAGE);
          }
     } catch (Exception e) {
         System.out.println("error al validar campor de id usuario y email en  formulario login");
     }
  
  
   }

}

//Metodo para actualizar administrador
public void JActuaAdmi(){
   //Se declara una variable para guardar la nueva contrase√±a 
 String passn ="";
 //Se valida si estan vacios la cajas de texto(usuario, nombre, emial) 
if(txtUsuAdmi.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el  usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}
else if(txtNomAdm.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el nombre del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}

else if(txtEmaAdm.getText().length()==0){
JOptionPane.showMessageDialog(null, "Ingrese el email del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
}


 //Validar si ya existen el usuario o el email y la contrase√±a.
else {
    
    ing.MtdValidarUsu(txtIdAdmi.getText(),txtUsuAdmi.getText(),txtEmaAdm.getText());
     try {
          //valida si hay registros en bd.
          if(ing.datos.next()){
              //valida si existe el usuario
          if(txtUsuAdmi.getText().equals(ing.datos.getString(2))){
          JOptionPane.showMessageDialog(null, "Ya existe ese usuario","Administrador",JOptionPane.WARNING_MESSAGE);
          txtIdAdmi.grabFocus();
          }
          //Valida si existe el email
          else if(txtEmaAdm.getText().equals(ing.datos.getString(3))){
           JOptionPane.showMessageDialog(null, "Ya existe ese email","Administrador",JOptionPane.WARNING_MESSAGE);
          txtEmaAdm.grabFocus();
          }
          }
          else{
          if (!(txtPassAdm.getText().length()==0)){
                String pass = JOptionPane.showInputDialog(null, "Ingrese la actual contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                ing.MtdValidarPass(txtIdAdmi.getText());
                    try {
                        //Valida si hay registros en la bd.
                        if(ing.datos.next()){
                            //Valida si la contrase√±a coincide
                            if(pass.equals(ing.datos.getString(1))){
                                //Ingresa la nueva contrase√±a
                            passn = JOptionPane.showInputDialog(null, "Ingrese la nueva contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                             ing.MtdActuPass(txtIdAdmi.getText(),passn);
                             ing.MtdActuaAdmi(txtUsuAdmi.getText(), txtNomAdm.getText(), txtEmaAdm.getText(), txtIdAdmi.getText());
                             txtIdAdmi.setEnabled(true);
                             JOptionPane.showMessageDialog(null, "Datos actualizados exito","Administrador",JOptionPane.INFORMATION_MESSAGE);
                            }
                            else{
                            JOptionPane.showMessageDialog(null, "La contrase√±a actual no coicide","Administrador",JOptionPane.WARNING_MESSAGE);
                            }
                }
                        else{
                        JOptionPane.showMessageDialog(null, "No existe contrase√±a para este usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                        }
                    } catch (Exception e) {
                       JOptionPane.showMessageDialog(null,"Error al validar contrase√±a del administrador en JDialog administrador: "+e.getLocalizedMessage(),"Administrador",JOptionPane.ERROR_MESSAGE);

                    }
                }
          else if (txtPassAdm.getText().length()==0){
                        String pass = JOptionPane.showInputDialog(null, "Ingrese la actual contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                        ing.MtdValidarPass(txtIdAdmi.getText());
                        try {
                        //Valida si hay registros en la bd.
                        if(ing.datos.next()){
                            //Valida si la contrase√±a coincide
                            if(pass.equals(ing.datos.getString(1))){
                                //Ingresa la nueva contrase√±a
                           // passn = JOptionPane.showInputDialog(null, "Ingrese la nueva contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                            // ing.MtdActuPass(txtIdAdmi.getText(),passn);
                             ing.MtdActuaAdmi(txtUsuAdmi.getText(), txtNomAdm.getText(), txtEmaAdm.getText(), txtIdAdmi.getText());
                             txtIdAdmi.setEnabled(true);
                             JOptionPane.showMessageDialog(null, "Datos actualizados exito","Administrador",JOptionPane.INFORMATION_MESSAGE);
                            }
                            else{
                            JOptionPane.showMessageDialog(null, "La contrase√±a actual no coicide","Administrador",JOptionPane.WARNING_MESSAGE);
                            }
                }
                        else{
                        JOptionPane.showMessageDialog(null, "No existe contrase√±a para este usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                        }
                    } catch (Exception e) {
                       JOptionPane.showMessageDialog(null,"Error al validar contrase√±a del administrador en JDialog administrador: "+e.getLocalizedMessage(),"Administrador",JOptionPane.ERROR_MESSAGE);

                    }
                        
          }
          }}
     
          
     
      catch (Exception e) {
         System.out.println("Error al validar usuarios y email formulario login"+e.getLocalizedMessage());
     }
     
     }
}

//Metodo para eliminar administrador
public void JEliminarAdmi(){
int val = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar este usuario?","Administrador",JOptionPane.YES_NO_OPTION);
if(val == JOptionPane.YES_OPTION){
    String pass = JOptionPane.showInputDialog(null, "Ingrese la contrase√±a del usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                ing.MtdValidarPass(txtIdAdmi.getText());
                    try {
                        //Valida si hay registros en la bd.
                        if(ing.datos.next()){
                            //Valida si la contrase√±a coincide
                            if(pass.equals(ing.datos.getString(1))){
                              
                            ing.MtdElminarAdm(txtIdAdmi.getText());
                            JOptionPane.showMessageDialog(null, "Datos eiminados con exito","Administrador",JOptionPane.INFORMATION_MESSAGE);
                             txtIdAdmi.setEnabled(true);
                             
                            }
                            else{   
                            JOptionPane.showMessageDialog(null, "La contrase√±a actual no coicide","Administrador",JOptionPane.WARNING_MESSAGE);
                            }
                }
                        else{
                        JOptionPane.showMessageDialog(null, "No existe contrase√±a para este usuario","Administrador",JOptionPane.WARNING_MESSAGE);
                        }
                    } catch (Exception e) {
                       JOptionPane.showMessageDialog(null,"Error al validar contrase√±a del administrador en JDialog administrador: "+e.getLocalizedMessage(),"Administrador",JOptionPane.ERROR_MESSAGE);

                    }

}
}

//Metodo para buscar administrador
public void JBuscarAdmi(){
    try {
        String usu = JOptionPane.showInputDialog(null,"Ingrese la identificacion o el usuario del administrador","Adminsitrador",JOptionPane.INFORMATION_MESSAGE);
      
        ing.MtdBuscarAdm(usu);
        if(ing.datos.next()){
        txtIdAdmi.setText(ing.datos.getString(1));
        txtIdAdmi.setEnabled(false);
        txtUsuAdmi.setText(ing.datos.getString(2));
        txtNomAdm.setText(ing.datos.getString(4));
        txtEmaAdm.setText(ing.datos.getString(5));
        
        }
        else if (usu == null){
        }
        else{
        JOptionPane.showMessageDialog(null, "No existe el administrador","Administrador",JOptionPane.WARNING_MESSAGE);
        }
    } catch (Exception e){
        JOptionPane.showMessageDialog(null,"Error al buscar administrador en JDialog administrador: "+e.getLocalizedMessage(),"Administrador",JOptionPane.ERROR_MESSAGE);

    }

}
public void JAbrirAdministrador(){
administrador.setBounds(0, 0, 717, 342);
administrador.setVisible(true);
}

    @Override
    public void keyTyped(KeyEvent ke) {
        }

    @Override
    public void keyPressed(KeyEvent ke) {
        if(ke.getKeyCode()== KeyEvent.VK_ENTER){
        JIngresarLogin();
        }
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        
    }


}
